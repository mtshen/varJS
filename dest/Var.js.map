{"version":3,"sources":["../src/global.js"],"names":["Var","console","info","$database","$predefined","SET_VAR_CONST","NAME_BLACKLIST","GET_NEXT_NAME","$data","$nextName","$placeholder","data","GET_NEXT_ATTRIBUTE","$regexpRtn","exec","$cont","k","regeData","e","ET_INIT","$this","$name","arr","replace","split","length","rtn","i","j","$fn","$const","test","log","copyVar","Object","defineProperty","writable","Global","prototype","is","push","obj","name","debugge","window","$var","addMethods","methods","$console","undefined","var","call","const","init","fnName","fn","__init","_function","error","parseJson","rtnData","JSON","parse","code","content","nodeType","toString","toLowerCase","copy","_check","$d1","$d2","$f","check","flag","$isType","objk","get","scope","__scope","request","version"],"mappings":"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","file":"Var.js","sourcesContent":["\"use strict\"; // 进入严格模式 代码必须在严格模式下编写\r\nvar Var = (function() {\r\n\tif(Var) return console.info('varJS reloading!'); // 检查重复引用\r\n\t// 预定义的\r\n\tvar $database = { // 预定义库\r\n\t\t\t'$module': {}\r\n\t\t},\r\n\t\t$predefined = { // 预定义的变量\r\n\t\t\t'__template': {},\r\n\t\t\t'__init': [],\r\n\t\t\t'__scope': {},\r\n\t\t};\r\n\t// 核心文件\r\n\tvar SET_VAR_CONST = (function() {\r\n\t\tvar NAME_BLACKLIST = /(^__template$)|(^__init$)|(^__scope$)/;\r\n\t\t/**\r\n\t\t * 查询改变量下的某一个变量 0.2x\r\n\t\t * @param {Object} $data    \t查询变量\r\n\t\t * @param {Object} $nextName\t子变量名称\r\n\t\t * @param {Object} $placeholder\t如果自变量不存在的占位变量\r\n\t\t * 会返回一个具体的值\r\n\t\t * */\r\n\t\tfunction GET_NEXT_NAME($data, $nextName, $placeholder) {\r\n\t\t\tvar data = $data[$nextName];\r\n\t\t\treturn(data ? data : $placeholder);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * 查询改变量下的某一个变量 0.2x\r\n\t\t * @param {Object} $data    \t查询变量\r\n\t\t * @param {Object} $nextName\t查询条件\r\n\t\t * 会返回一个数组\r\n\t\t * */\r\n\t\tfunction GET_NEXT_ATTRIBUTE($data, $nextName) {\r\n\t\t\tvar data = $data;\r\n\t\t\tvar $regexpRtn = /(?:^\\[([_$\\w]*) *(\\$=) *(.*)\\]$)|(?:^\\[([_$\\w]*) *([\\^!*]?=?) *(.*)\\]$)/.exec($nextName);\r\n\t\t\tvar $cont = [];\r\n\t\t\tif($regexpRtn) {\r\n\t\t\t\t$cont[0] = $regexpRtn[1] || $regexpRtn[4]; // 验证内容\r\n\t\t\t\t$cont[1] = $regexpRtn[2] || $regexpRtn[5]; // 验证方式\r\n\t\t\t\t$cont[3] = $regexpRtn[3] || $regexpRtn[6]; // 验证结果\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tfor(var k in $data) {\r\n\t\t\t\t\tvar regeData = $data[k];\r\n\r\n\t\t\t\t}\r\n\t\t\t\tswitch($cont[1]) {\r\n\t\t\t\t\tcase '!=':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '^=':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '$=':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '*=':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '=':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase '!':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} catch(e) {}\r\n\t\t\treturn(data ? data : $placeholder);\r\n\t\t}\r\n\r\n\t\t// 核心函数 第一层 获取 >\r\n\t\tfunction ET_INIT($this, $name) {\r\n\t\t\tvar arr = $name.replace(/ *> */g, '>').split('>'); // 分割\r\n\t\t\tif(arr.length === 1) return [$this, $name] // 优化 | 如果只有1层 ,直接返回结果\t\t\r\n\t\t\t$this[arr[0]] = ($this[arr[0]] ? $this[arr[0]] : {}); // 如果存在未定义的路径地址,赋值为 {};\r\n\t\t\tvar rtn = $this[arr[0]]; // 获取第一个路径地址\r\n\t\t\tfor(var i = 1, j = arr.length - 1; i < j; i++) { // 路径循环查询\r\n\t\t\t\tif(!rtn[arr[i]]) rtn[arr[i]] = {};\r\n\t\t\t\trtn = rtn[arr[i]];\r\n\t\t\t} // 查询结束\r\n\t\t\treturn [rtn, arr[j]];\r\n\t\t};\r\n\r\n\t\treturn function($name, $fn, $const) {\r\n\t\t\t// 检查预定义命名冲突\r\n\t\t\tif(NAME_BLACKLIST.test($name)) return console.log('The ' + $name + ' has been defined in advance');\r\n\t\t\tvar rtn = ET_INIT(this, $name); // 得到路径 [倒数第二路径,最后路径]\r\n\t\t\tif(typeof $name === 'string' && $fn) {\r\n\t\t\t\tif(rtn[0][rtn[1]]) {\r\n\t\t\t\t\treturn($const ? copyVar(rtn[0][rtn[1]]) : rtn[0][rtn[1]]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trtn[0][rtn[1]] = $fn;\r\n\t\t\t\t\t$const && Object.defineProperty(rtn[0], rtn[1], {\r\n\t\t\t\t\t\twritable: false\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t} else if(typeof $name === 'string' && !$fn) {\r\n\t\t\t\tvar rtn = ($const ? copyVar(rtn[0][rtn[1]]) : rtn[0][rtn[1]]);\r\n\t\t\t\treturn rtn;\r\n\t\t\t}\r\n\t\t};\r\n\t})();\r\n\r\n\t/**\r\n\t * copy一组新的数据\r\n\t * @param {Object} data\r\n\t */\r\n\tfunction copyVar(data) {\r\n\t\tswitch(Global.prototype.is(data)) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tvar arr = [];\r\n\t\t\t\tfor(var i = 0, j = data.length; i < j; i++) {\r\n\t\t\t\t\tarr.push(copyVar(data[i]));\r\n\t\t\t\t}\r\n\t\t\t\treturn arr;\r\n\t\t\tcase 'likeArray':\r\n\t\t\tcase 'object':\r\n\t\t\t\tvar obj = {};\r\n\t\t\t\tfor(var k in data) {\r\n\t\t\t\t\tobj[k] = copyVar(data[k]);\r\n\t\t\t\t}\r\n\t\t\t\treturn obj;\r\n\t\t\tdefault:\r\n\t\t\t\treturn data;\r\n\t\t}\r\n\t\treturn data;\r\n\t};\r\n\t/**\r\n\t * varJS 主函数 加载或读出内容\r\n\t * @param {String} varName 分支 / 只能以字母_$开头,字母数字$_结尾\r\n\t */\r\n\tfunction Global(name) {\r\n\t\tif(name) {\r\n\t\t\tif($database[name]) {\r\n\t\t\t\tconsole.info('Unable to create the,Because the name already exists!');\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\t$database[name] = this;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(var k in $predefined) {\r\n\t\t\tthis[k] = copyVar($predefined[k]);\r\n\t\t}\r\n\t};\r\n\t/**\r\n\t * 用于var的调试 直接将数据库释放到全局\r\n\t * @param {Object} varName 调试用户名\r\n\t */\r\n\tGlobal.prototype.debugge = function() {\r\n\t\twindow.$var = this;\r\n\t\twindow.$database = $database;\r\n\t\tconsole.log('%cdebugge =>', 'color:red');\r\n\t\tconsole.log('$var =>', window.$var);\r\n\t\tconsole.log('$database =>', window.$database);\r\n\t};\r\n\t/**\r\n\t * 为Var加入一个新的属性 或 方法\r\n\t * @param {String} name 属性或方法名\r\n\t * @param {Object} methods 属性或方法\r\n\t */\r\n\tGlobal.prototype.addMethods = function(name, methods) {\r\n\t\ttry {\r\n\t\t\tGlobal.prototype[name] = methods;\r\n\t\t} catch(e) {\r\n\t\t\tvar $console = ['global.addMethods() no success! why : '];\r\n\t\t\tif(typeof name !== 'string') {\r\n\t\t\t\t$console.push('There is an error in the type of parameter!');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tswitch(undefined) {\r\n\t\t\t\tcase name:\r\n\t\t\t\t\t$console.push('lack of parameter name!');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase methods:\r\n\t\t\t\t\t$console.push('lack of parameter methods!');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t$console.push('unknown!');\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn this;\r\n\t};\r\n\r\n\t// 定义一个变量\r\n\tGlobal.prototype.var = function($name, $fn) {\r\n\t\treturn SET_VAR_CONST.call(this, $name, $fn, false);\r\n\t};\r\n\t// 定义一个常量\r\n\tGlobal.prototype.const = function($name, $fn) {\r\n\t\treturn SET_VAR_CONST.call(this, $name, $fn, true);\r\n\t};\r\n\t/**\r\n\t * init 初始化事件\r\n\t * @param {String} fnName 函数描述\r\n\t * @param {Function} fn\t初始化的函数\r\n\t */\r\n\tGlobal.prototype.init = function(fnName, fn) {\r\n\t\ttry {\r\n\t\t\tif(fnName && !fn) { // 返回某个事件函数\r\n\t\t\t\tif(typeof fnName === 'function') {\r\n\t\t\t\t\tthis.__init.push({\r\n\t\t\t\t\t\t'_function': fnName\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor(var i = 0, j = this.__init.length; i < j; i++) {\r\n\t\t\t\t\t\tif(this.__init[i].name === fnName) {\r\n\t\t\t\t\t\t\treturn this.__init[i]._function;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this.__init[fnName];\r\n\t\t\t\t}\r\n\t\t\t} else if(fnName && fn) {\r\n\t\t\t\tthis.__init.push({\r\n\t\t\t\t\tname: fnName,\r\n\t\t\t\t\t_function: fn\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t} else if(!fnName && !fn) {\r\n\t\t\t\tfor(var i = 0, j = this.__init.length; i < j; i++) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tthis.__init[i]._function.call(this);\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.log('Don\\'t have the right to perform ', (this.__init[i].name || 'unnamed') + '()');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(e);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * 解析返回的JSON\r\n\t * @param {Object} data 数据\r\n\t */\r\n\tGlobal.prototype.parseJson = function(data) {\r\n\t\tvar rtnData = data;\r\n\t\tif(typeof data === 'string') {\r\n\t\t\tdata =\r\n\t\t\t\t(data !== '<html><body><h1>内部服务器错误</h1></body></html>') ?\r\n\t\t\t\tJSON.parse(data) : false;\r\n\t\t} else if(typeof data === 'object' && data.code === 10) {\r\n\t\t\tdata = false;\r\n\t\t}\r\n\t\tif(!data) {\r\n\t\t\tconsole.log('parseJson : 解析出现错误! /n 原始数据 : ', data);\r\n\t\t}\r\n\t\treturn data;\r\n\t};\r\n\r\n\t/**\r\n\t * 判断变量的类型\r\n\t * @param {Object} content 变量\r\n\t */\r\n\tGlobal.prototype.is = function(content) {\r\n\t\ttry {\r\n\t\t\tif(content === null) return null;\r\n\t\t\tif(typeof content !== \"object\") return typeof content;\r\n\t\t\tif(content.nodeType) return \"domElement\";\r\n\t\t\tif(typeof content === \"object\" && Object.prototype.toString.call(content) === \"[object Array]\") return \"array\";\r\n\t\t\tif(content.length && typeof content.length === \"number\" && content.length > -1) return \"likeArray\";\r\n\t\t\tif(typeof content === \"object\") return Object.prototype.toString.call(content).replace(/\\[object (\\w+)\\]/, \"$1\").toLowerCase();\r\n\t\t\treturn \"cannotJudge variableType!\";\r\n\t\t} catch(e) {\r\n\t\t\treturn \"cannotJudge variableType!\";\r\n\t\t}\r\n\t};\r\n\t/**\r\n\t * 完全拷贝一个新的参数\r\n\t * @param {Object} data\r\n\t */\r\n\tGlobal.prototype.copy = function(data) {\r\n\t\treturn copyVar(data);\r\n\t};\r\n\r\n\tfunction _check($d1, $d2, $f) {\r\n\t\treturn($f ? $d1 === $d2 : $d1 == $d2);\r\n\t}\r\n\r\n\t/**\r\n\t * 检查两个对象是否相等\r\n\t * @param {Object} $d1 被检查的对象\r\n\t * @param {Object} $d2 参照对象\r\n\t * @param {Object} $f 默认false,是否进行全等检查\r\n\t */\r\n\tGlobal.prototype.check = function($d1, $d2, $f) {\r\n\t\tvar flag = true;\r\n\t\tvar $isType = this.is($d1);\r\n\t\tswitch($isType) {\r\n\t\t\tcase 'object':\r\n\t\t\tcase 'likeArray':\r\n\t\t\t\tif($isType === this.is($d2)) {\r\n\t\t\t\t\tfor(var k in $d2) {\r\n\t\t\t\t\t\tif(!$d1[k]) return false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(var k in $d1) {\r\n\t\t\t\t\t\tif(!$d2[k]) return false;\r\n\t\t\t\t\t\tswitch(objk) {\r\n\t\t\t\t\t\t\tcase 'object':\r\n\t\t\t\t\t\t\tcase 'likeArray':\r\n\t\t\t\t\t\t\t\tthis.check($d1[k], $d2[k], $f);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tif(!_check($d1[k], $d2[k], $f)) {\r\n\t\t\t\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn _check($d1, $d2, $f);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn flag;\r\n\t};\r\n\t/**\r\n\t * 获取一个变量或者获取其他分支的一个变量\r\n\t * 替代varData及constData\r\n\t * @param {Object} name\r\n\t * @param {Object} $name\r\n\t */\r\n\tGlobal.prototype.get = function(name, $name) {\r\n\t\tif(!(name || $name)) return this;\r\n\t\tif($name) {\r\n\t\t\t// 检查预定义变量\r\n\t\t\tif(!$database[name]) {\r\n\t\t\t\tconsole.info('Don\\'t have the branch!');\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t\tvar rtn = SET_VAR_CONST.call($database[name], $name);\r\n\t\t} else {\r\n\t\t\tvar rtn = SET_VAR_CONST.call(this, name);\r\n\t\t}\r\n\t\treturn rtn;\r\n\t}\r\n\tGlobal.prototype.scope = function($name, $fn) {\r\n\t\tthis.__scope[$name] = $fn.call(this, this.copy(this));\r\n\t};\r\n\tGlobal.prototype.request = function($name, $fn) {\r\n\t\tif(!$fn) {\r\n\t\t\treturn this.__scope[$name];\r\n\t\t} else {\r\n\t\t\treturn this.get($name, '__scope>' + $fn);\r\n\t\t}\r\n\t};\r\n\r\n\tGlobal.prototype.version = 'Beta 0.1.1';\r\n\treturn Global;\r\n})();\r\n"]}